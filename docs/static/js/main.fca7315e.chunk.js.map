{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifCollectionItem.js","components/GifCollection.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","getCollection","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifCollectionItem","className","src","alt","GifCollection","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE1B,EAAqCC,mBAAS,IAA9C,mBAAQC,EAAR,KAAoBC,EAApB,KAgBC,OAEO,sBAAMC,SAZO,SAACC,GACjBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAK,OAAIP,GAAJ,mBAAmBO,OACvCN,EAAc,MAQf,SAEK,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBQ,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCPjBG,EAAa,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEnBC,EAFmB,iDAE6BC,UAAUH,GAFvC,8DAGNI,MAAMF,GAHA,cAGnBG,EAHmB,gBAIJA,EAAKC,OAJD,uBAIlBC,EAJkB,EAIlBA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAelBM,GAfkB,4CAAH,sDCAbO,EAAoB,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAI1C,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJHO,EAAgB,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAS3B,ECTwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAO,GACPa,SAAU,IAFd,mBAAOC,EAAP,KAAcC,EAAd,KAkCA,OA5BAC,qBAAU,WAENxB,EAAcC,GACTwB,MAAK,SAAAC,GAEFC,YAAW,WAGPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAId,UAKZ,CAACpB,IASGqB,ED3BwBM,CAAa3B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAKpB,OACI,qCACI,oBAAIJ,UAAU,mCAAd,SAAkDhB,IAEjDoB,GAAW,2CAEZ,qBAAKJ,UAAU,kBAAf,SAGYH,EAAOJ,KAAK,SAAAC,GAAG,OACf,cAAC,EAAD,eAEQA,GADCA,EAAIC,aExBxBiB,EAAe,WAGxB,MAAoC1C,mBAAS,CAAC,UAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAMA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAID,6BAEQ4C,EAAWpB,KAAI,SAAAT,GACX,OAAO,cAAC,EAAD,CAA8BA,SAAUA,GAApBA,Y,MCpB9C8B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.fca7315e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n   \r\n   const  [inputValue, setInputValue] = useState(\"\")\r\n\r\n   const handleInputChange =(e) =>{\r\n       setInputValue(e.target.value);\r\n   }\r\n\r\n   const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( categ=> [inputValue, ...categ]);\r\n            setInputValue(\"\");\r\n            \r\n        }\r\n\r\n   }\r\n   \r\n    return (\r\n        \r\n           <form onSubmit={handleSubmit}>\r\n\r\n                <input \r\n                    type=\"text\" \r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n           </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getCollection = async (category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=5&api_key=8kabWyATlUVxA4gW0gTHoHOrubbL5Qco`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n        \r\n    return gifs;\r\n\r\n   }\r\n","import React from 'react'\r\n\r\nexport const GifCollectionItem = ({id, title, url}) => {\r\n   \r\n    \r\n   \r\n    return (\r\n        <div className=\"card animate__animated animate__backInUp\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React/* , { useEffect, useState } */ from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n/* import { getCollection } from '../helpers/getGifs'; */\r\nimport { GifCollectionItem } from './GifCollectionItem';\r\n\r\nexport const GifCollection = ({category}) => {\r\n   \r\n    /* const [images, setImages] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        getCollection(category)\r\n            .then(setImages);\r\n    }, [category]) */\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__pulse\">{category}</h3>\r\n\r\n            {loading && <p>loading...</p>}\r\n            \r\n            <div className=\"card-collection\">\r\n                \r\n                    {\r\n                        images.map( img =>(\r\n                        <GifCollectionItem\r\n                            key={img.id} \r\n                            {...img} \r\n                        />\r\n                        ))\r\n                    }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport { useEffect, useState } from 'react'\r\nimport {getCollection} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data : [],\r\n        loading : true\r\n    });\r\n\r\n\r\n    useEffect(() =>{\r\n\r\n        getCollection(category)\r\n            .then(imgs =>{\r\n                \r\n                setTimeout(() => {\r\n                    \r\n                    \r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n\r\n                }, 2000);\r\n                \r\n                    \r\n            })\r\n\r\n    }, [category])\r\n\r\n    /* setTimeout(() => {\r\n        setState({\r\n            data: [1,2,3,4,5,6,7,8,9],\r\n            loading: false\r\n        })\r\n    }, 3000); */\r\n\r\n    return state;\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifCollection } from './components/GifCollection';\r\n\r\n\r\nexport const GifExpertApp = () =>{\r\n    /* const categories = [\"Dragon ball Z\", \"Pokemon\", \"Un Show Mas\"] */\r\n\r\n    const [categories, setCategories] = useState([\"venom\"]);\r\n    \r\n    /* const handleAdd = () =>{\r\n          setCategories([...categories, \"Mr Beats\"]);\r\n    } */\r\n    \r\n    return(\r\n      <>\r\n        <h1>GifExpertApp</h1>\r\n        <AddCategory setCategories={setCategories} />\r\n        <hr />\r\n\r\n        \r\n\r\n       <ol>\r\n           {\r\n               categories.map(category =>{\r\n                   return <GifCollection key={category} category={category} />\r\n\r\n               })\r\n           }\r\n       </ol>\r\n  \r\n      </>\r\n    );\r\n  }\r\n  \r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}